package store.yaff.feature.impl.exploit;

import net.minecraft.network.play.client.CPacketConfirmTransaction;
import net.minecraft.network.play.client.CPacketKeepAlive;
import store.yaff.event.AbstractEvent;
import store.yaff.event.impl.Packet;
import store.yaff.feature.AbstractFeature;
import store.yaff.feature.Category;
import store.yaff.setting.impl.NumericSetting;

public class PingSpoof extends AbstractFeature {
    public static final NumericSetting spoofTicks = new NumericSetting("Ticks", "None", 25000, 50, 30000, 50, () -> true);

    protected long packetKey;
    protected short packetUUID;
    protected int packetWID;

    public PingSpoof(String name, String description, Category category, int key) {
        super(name, description, category, key);
        addSettings(spoofTicks);
    }

    @Override
    public void onEvent(AbstractEvent event) {
        if (event instanceof Packet.Send packetEvent) {
            if (!mc.isSingleplayer()) {
                if (packetEvent.getPacket() instanceof CPacketConfirmTransaction transactionPacket) {
                    packetEvent.setCancelled(true);
                    new Thread(() -> {
                        try {
                            Thread.sleep((long) spoofTicks.getNumericValue());
                        } catch (InterruptedException ignored) {
                        }
                        packetUUID = transactionPacket.getUid();
                        packetWID = transactionPacket.getWindowId();
                        mc.player.connection.sendPacket(packetEvent.getPacket());
                    }).start();
                }
                if (packetEvent.getPacket() instanceof CPacketKeepAlive keepAlivePacket) {
                    packetEvent.setCancelled(true);
                    new Thread(() -> {
                        try {
                            Thread.sleep((long) spoofTicks.getNumericValue());
                        } catch (InterruptedException ignored) {
                        }
                        packetKey = keepAlivePacket.getKey();
                        mc.player.connection.sendPacket(packetEvent.getPacket());
                    }).start();
                }
            }
        }
    }

}
